from telegram import Update, InputFile, ReplyKeyboardMarkup
from telegram.ext import ContextTypes
from config import ADMIN_ID
import db
import os
from utils import is_admin, IMAGES_DIR, logger

async def start(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    user = update.effective_user
    registered = db.register_user(user.id, user.username, user.full_name)
    msg_id = f"–í–∞—à Telegram ID: {user.id}\n"
    if is_admin(user.id):
        keyboard = [["/tour", "/hc"], ["/send_tour_image", "/addhc", "/send_results", "/add_player", "/list_players"]]
        msg = (
            f'–ü—Ä–∏–≤–µ—Ç, {user.full_name}! –¢—ã –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω –∫–∞–∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä Fantasy KHL.\n\n'
            '–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:\n/tour ‚Äî –ø–æ–∫–∞–∑–∞—Ç—å —Å–æ—Å—Ç–∞–≤ –Ω–∞ —Ç—É—Ä\n/hc ‚Äî –±–∞–ª–∞–Ω—Å HC\n/send_tour_image ‚Äî –∑–∞–≥—Ä—É–∑–∏—Ç—å –∏ —Ä–∞–∑–æ—Å–ª–∞—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Ç—É—Ä–∞\n/addhc ‚Äî –Ω–∞—á–∏—Å–ª–∏—Ç—å HC –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é\n/send_results ‚Äî —Ä–∞–∑–æ—Å–ª–∞—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã —Ç—É—Ä–∞\n/add_player ‚Äî –¥–æ–±–∞–≤–∏—Ç—å –∏–≥—Ä–æ–∫–∞\n/list_players ‚Äî —Å–ø–∏—Å–æ–∫ –∏–≥—Ä–æ–∫–æ–≤'
        )
    else:
        keyboard = [["/tour", "/hc"]]
        msg = (
            f'–ü—Ä–∏–≤–µ—Ç, {user.full_name}! –¢—ã –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω –≤ Fantasy KHL.\n\n'
            '–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:\n/tour ‚Äî –ø–æ–∫–∞–∑–∞—Ç—å —Å–æ—Å—Ç–∞–≤ –Ω–∞ —Ç—É—Ä\n/hc ‚Äî –±–∞–ª–∞–Ω—Å HC'
        )
    markup = ReplyKeyboardMarkup(keyboard, resize_keyboard=True)
    if registered:
        await update.message.reply_text(msg_id + msg, reply_markup=markup)
    else:
        await update.message.reply_text(msg_id + '–¢—ã —É–∂–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω!', reply_markup=markup)

# --- TOUR ConversationHandler states ---
TOUR_START, TOUR_FORWARD_1, TOUR_FORWARD_2, TOUR_FORWARD_3, TOUR_DEFENDER_1, TOUR_DEFENDER_2, TOUR_GOALIE, TOUR_CAPTAIN = range(8)

async def tour_start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    # 1. –û—Ç–ø—Ä–∞–≤–∏—Ç—å –∫–∞—Ä—Ç–∏–Ω–∫—É —Ç—É—Ä–∞ –∏ –≤–≤–æ–¥–Ω—ã–π —Ç–µ–∫—Å—Ç —Å –±—é–¥–∂–µ—Ç–æ–º
    budget = db.get_budget() or 0
    roster = db.get_tour_roster_with_player_info()
    forwards = [p for p in roster if p[3].lower() == '–Ω–∞–ø–∞–¥–∞—é—â–∏–π']
    defenders = [p for p in roster if p[3].lower() == '–∑–∞—â–∏—Ç–Ω–∏–∫']
    goalies = [p for p in roster if p[3].lower() == '–≤—Ä–∞—Ç–∞—Ä—å']
    context.user_data['tour_budget'] = budget
    context.user_data['tour_roster'] = roster
    context.user_data['tour_selected'] = {'forwards': [], 'defenders': [], 'goalie': None, 'captain': None, 'spent': 0}
    # –û—Ç–ø—Ä–∞–≤–∏—Ç—å –∫–∞—Ä—Ç–∏–Ω–∫—É (–µ—Å–ª–∏ –µ—Å—Ç—å)
    try:
        tour_img_path = None
        tour_img_txt = os.path.join(os.getcwd(), 'latest_tour.txt')
        if os.path.exists(tour_img_txt):
            with open(tour_img_txt, 'r') as f:
                fname = f.read().strip()
                if fname:
                    fpath = os.path.join(IMAGES_DIR, fname)
                    if os.path.exists(fpath):
                        tour_img_path = fpath
        if not tour_img_path:
            # fallback: last by name
            files = [f for f in os.listdir(IMAGES_DIR) if f.lower().endswith((".jpg", ".jpeg", ".png"))]
            if files:
                tour_img_path = os.path.join(IMAGES_DIR, sorted(files)[-1])
        if tour_img_path:
            with open(tour_img_path, 'rb') as img:
                await update.message.reply_photo(photo=InputFile(img))
    except Exception as e:
        logger.error(f'–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è —Ç—É—Ä–∞: {e}')
    # –í–≤–æ–¥–Ω—ã–π —Ç–µ–∫—Å—Ç
    intro = (
        "–í–æ—Ç —Å–ø–∏—Å–æ–∫ –∏–≥—Ä–æ–∫–æ–≤ –Ω–∞ —Ç—É—Ä. –í—ã–±–µ—Ä–∏—Ç–µ —Å–æ—Å—Ç–∞–≤:\n"
        "3 –Ω–∞–ø–∞–¥–∞—é—â–∏—Ö\n2 –∑–∞—â–∏—Ç–Ω–∏–∫–æ–≤\n1 –≤—Ä–∞—Ç–∞—Ä—è\n\n1 –∫–∞–ø–∏—Ç–∞–Ω (–∏–∑ –≤—ã–±—Ä–∞–Ω–Ω—ã—Ö)\n\n"
        f"üí∞ –í–∞—à –±—é–¥–∂–µ—Ç: {budget} HC"
    )
    await update.message.reply_text(intro)
    # –ü–µ—Ä–µ—Ö–æ–¥–∏–º –∫ –≤—ã–±–æ—Ä—É –ø–µ—Ä–≤–æ–≥–æ –Ω–∞–ø–∞–¥–∞—é—â–µ–≥–æ
    return TOUR_FORWARD_1

async def tour_forward_1(update: Update, context: ContextTypes.DEFAULT_TYPE):
    # TODO: –ø–æ–∫–∞–∑–∞—Ç—å –∫–Ω–æ–ø–∫–∏ —Å –Ω–∞–ø–∞–¥–∞—é—â–∏–º–∏, –æ–±—Ä–∞–±–æ—Ç–∞—Ç—å –≤—ã–±–æ—Ä
    pass

async def tour_forward_2(update: Update, context: ContextTypes.DEFAULT_TYPE):
    # TODO: –ø–æ–∫–∞–∑–∞—Ç—å –∫–Ω–æ–ø–∫–∏ —Å –Ω–∞–ø–∞–¥–∞—é—â–∏–º–∏ (–±–µ–∑ —É–∂–µ –≤—ã–±—Ä–∞–Ω–Ω—ã—Ö), –æ–±—Ä–∞–±–æ—Ç–∞—Ç—å –≤—ã–±–æ—Ä
    pass

async def tour_forward_3(update: Update, context: ContextTypes.DEFAULT_TYPE):
    # TODO: –ø–æ–∫–∞–∑–∞—Ç—å –∫–Ω–æ–ø–∫–∏ —Å –Ω–∞–ø–∞–¥–∞—é—â–∏–º–∏ (–±–µ–∑ —É–∂–µ –≤—ã–±—Ä–∞–Ω–Ω—ã—Ö), –æ–±—Ä–∞–±–æ—Ç–∞—Ç—å –≤—ã–±–æ—Ä
    pass

async def tour_defender_1(update: Update, context: ContextTypes.DEFAULT_TYPE):
    # TODO: –ø–æ–∫–∞–∑–∞—Ç—å –∫–Ω–æ–ø–∫–∏ —Å –∑–∞—â–∏—Ç–Ω–∏–∫–∞–º–∏, –æ–±—Ä–∞–±–æ—Ç–∞—Ç—å –≤—ã–±–æ—Ä
    pass

async def tour_defender_2(update: Update, context: ContextTypes.DEFAULT_TYPE):
    # TODO: –ø–æ–∫–∞–∑–∞—Ç—å –∫–Ω–æ–ø–∫–∏ —Å –∑–∞—â–∏—Ç–Ω–∏–∫–∞–º–∏ (–±–µ–∑ —É–∂–µ –≤—ã–±—Ä–∞–Ω–Ω—ã—Ö), –æ–±—Ä–∞–±–æ—Ç–∞—Ç—å –≤—ã–±–æ—Ä
    pass

async def tour_goalie(update: Update, context: ContextTypes.DEFAULT_TYPE):
    # TODO: –ø–æ–∫–∞–∑–∞—Ç—å –∫–Ω–æ–ø–∫–∏ —Å –≤—Ä–∞—Ç–∞—Ä—è–º–∏, –æ–±—Ä–∞–±–æ—Ç–∞—Ç—å –≤—ã–±–æ—Ä
    pass

async def tour_captain(update: Update, context: ContextTypes.DEFAULT_TYPE):
    # TODO: –ø–æ–∫–∞–∑–∞—Ç—å –∫–Ω–æ–ø–∫–∏ —Å –≤—ã–±—Ä–∞–Ω–Ω—ã–º–∏ –Ω–∞–ø–∞–¥–∞—é—â–∏–º–∏ –∏ –∑–∞—â–∏—Ç–Ω–∏–∫–∞–º–∏, –æ–±—Ä–∞–±–æ—Ç–∞—Ç—å –≤—ã–±–æ—Ä –∫–∞–ø–∏—Ç–∞–Ω–∞
    pass


async def hc(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    user = update.effective_user
    data = db.get_user_by_id(user.id)
    if data:
        await update.message.reply_text(f'üí∞ –¢–≤–æ–π –±–∞–ª–∞–Ω—Å: {data[3]} HC')
    else:
        await update.message.reply_text('–¢—ã –Ω–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω!')
