from telegram import Update, InputFile, ReplyKeyboardMarkup
from telegram.ext import ContextTypes
from config import ADMIN_ID
import db
import os
from utils.utils import is_admin, IMAGES_DIR, logger

async def start(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    user = update.effective_user
    registered = db.register_user(user.id, user.username, user.full_name)
    if is_admin(user.id):
        keyboard = [["/tour", "/hc"], ["/send_tour_image", "/addhc", "/send_results"]]
        msg = (
            f'–ü—Ä–∏–≤–µ—Ç, {user.full_name}! –¢—ã –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω –∫–∞–∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä Fantasy KHL.\n\n'
            '–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:\n/tour ‚Äî –ø–æ–∫–∞–∑–∞—Ç—å —Å–æ—Å—Ç–∞–≤ –Ω–∞ —Ç—É—Ä\n/hc ‚Äî –±–∞–ª–∞–Ω—Å HC\n/send_tour_image ‚Äî –∑–∞–≥—Ä—É–∑–∏—Ç—å –∏ —Ä–∞–∑–æ—Å–ª–∞—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Ç—É—Ä–∞\n/addhc ‚Äî –Ω–∞—á–∏—Å–ª–∏—Ç—å HC –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é\n/send_results ‚Äî —Ä–∞–∑–æ—Å–ª–∞—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã —Ç—É—Ä–∞'
        )
    else:
        keyboard = [["/tour", "/hc"]]
        msg = (
            f'–ü—Ä–∏–≤–µ—Ç, {user.full_name}! –¢—ã –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω –≤ Fantasy KHL.\n\n'
            '–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:\n/tour ‚Äî –ø–æ–∫–∞–∑–∞—Ç—å —Å–æ—Å—Ç–∞–≤ –Ω–∞ —Ç—É—Ä\n/hc ‚Äî –±–∞–ª–∞–Ω—Å HC'
        )
    markup = ReplyKeyboardMarkup(keyboard, resize_keyboard=True)
    if registered:
        await update.message.reply_text(msg, reply_markup=markup)
    else:
        await update.message.reply_text('–¢—ã —É–∂–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω!', reply_markup=markup)

async def tour(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    try:
        files = os.listdir(IMAGES_DIR)
        if not files:
            await update.message.reply_text('–ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Ç—É—Ä–∞ –ø–æ–∫–∞ –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω–æ.')
            return
        latest = sorted(files)[-1]
        with open(os.path.join(IMAGES_DIR, latest), 'rb') as img:
            await update.message.reply_photo(photo=InputFile(img), caption='–°–æ—Å—Ç–∞–≤ –∏–≥—Ä–æ–∫–æ–≤ –Ω–∞ —Ç—É—Ä:')
    except Exception as e:
        logger.error(f'–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è —Ç—É—Ä–∞: {e}')
        await update.message.reply_text('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è.')

async def hc(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    user = update.effective_user
    data = db.get_user_by_id(user.id)
    if data:
        await update.message.reply_text(f'üí∞ –¢–≤–æ–π –±–∞–ª–∞–Ω—Å: {data[3]} HC')
    else:
        await update.message.reply_text('–¢—ã –Ω–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω!')
